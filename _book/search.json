[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MTRS-Skript",
    "section": "",
    "text": "Willkommen zum Skript",
    "crumbs": [
      "Willkommen zum Skript"
    ]
  },
  {
    "objectID": "index.html#verbessern",
    "href": "index.html#verbessern",
    "title": "MTRS-Skript",
    "section": "Verbessern",
    "text": "Verbessern\nIch freue mich über alle Fehlerkorrekturen und Verbesserungsvorschläge die mich erreichen. Am einfachsten ist dies via Mail.",
    "crumbs": [
      "Willkommen zum Skript"
    ]
  },
  {
    "objectID": "index.html#mitwirken",
    "href": "index.html#mitwirken",
    "title": "MTRS-Skript",
    "section": "Mitwirken",
    "text": "Mitwirken\nWer am Skriptum mitarbeiten möchte kann mich gerne kontaktieren. Meine Kontaktdaten sind auf der Homepage der HTL-Anichstrasse zu finden.\nViel Vergnügen mit MTRS und dem interaktiven Quarto Book!",
    "crumbs": [
      "Willkommen zum Skript"
    ]
  },
  {
    "objectID": "SteuerRegel/01_SteuerRegel.html",
    "href": "SteuerRegel/01_SteuerRegel.html",
    "title": "Steuer- und Regelungstechnik",
    "section": "",
    "text": "In diesem Kapitel geht es darum wie wir Maschinen und Schaltungen dazu bringen, ein gewünschtes Verhalten zu zeigen. Zum Beipiel soll ein Roboterarm ein Werkstück von der Position A zur Position B stellen. Oder eine Drohne trotz Windes ihre Postion halten.\nWir sprechen von Steuern, wenn wir eine Befehlskette vorgeben und keine Möglichkeit haben auf Störungen einfluss zu nehmen.\nVon Regeln sprechen wir, wenn wir Informationen über das zu erreichende Ziel erhalten und damit auf Störungen eingehen können. Es gibt beim Regeln daher eine Feedbackschleife oder auch Rückkopplung genannt.",
    "crumbs": [
      "Steuer- und Regelungstechnik"
    ]
  },
  {
    "objectID": "SteuerRegel/01.02_Regelungstechnik.html",
    "href": "SteuerRegel/01.02_Regelungstechnik.html",
    "title": "1  Regelungstechnik",
    "section": "",
    "text": "1.1 Warum wir regeln",
    "crumbs": [
      "Steuer- und Regelungstechnik",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Regelungstechnik</span>"
    ]
  },
  {
    "objectID": "SteuerRegel/01.02_Regelungstechnik.html#warum-wir-regeln",
    "href": "SteuerRegel/01.02_Regelungstechnik.html#warum-wir-regeln",
    "title": "1  Regelungstechnik",
    "section": "",
    "text": "Viele Aufgaben von Maschinen können auch durch Steuern umgesetzt werden. Eine Regelung erlaubt es aber, auf unerwünschte Einflüsse, sogenannte Störgrößen, zu reagieren. Als Beispiel soll der Tempomat, Geschwindigkeitsregelanlage, des Autos dienen. Die Aufgabe des Tempomates ist es, die Geschwindigkeit, Regelgröße, konstant zu halten. Als unerwünschte Einflüsse, Störgrößen, sind alle physikalischen Größen zu betrachten, welche die Geschwindigkeit beeinflussen. Beispiele sind die Steigung der Straße und Wind.\nDie Geschwindigkeit des Autos wird über die Leistung, Stellgröße, bestimmt. Führt die Straße Bergauf wird mehr Leistung für die gleiche Geschwindigkeit benötigt. Es muss also die Leistung laufend angepasst werden, um eine konstante Geschwindigkeit zu erhalten.\nBei einer Steuerung würde eine Leistung eingestellt werden und sich daraus eine Geschwindigkeit ergeben. Dieses wäre jedoch nur für einen voreingestellten Fall identisch mit der gewünschten Geschwindigkeit.",
    "crumbs": [
      "Steuer- und Regelungstechnik",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Regelungstechnik</span>"
    ]
  },
  {
    "objectID": "SteuerRegel/01.02_Regelungstechnik.html#wie-wir-regeln---der-standardregelkreis",
    "href": "SteuerRegel/01.02_Regelungstechnik.html#wie-wir-regeln---der-standardregelkreis",
    "title": "1  Regelungstechnik",
    "section": "1.2 Wie wir regeln - Der Standardregelkreis",
    "text": "1.2 Wie wir regeln - Der Standardregelkreis\n\nRegeln ist ein Vorgang, bei dem der IST-Wert einer Größe gemessen und, durch Nachstellen der Stellgröße, dem SOLL-Wert angeglichen wird.\nDazu wird das Ergebnis an den Eingang zurück geführt und vom Sollwert subtrahiert. Es entsteht eine Rückkopplung. Durch das negative Vorzeichen handelt es sich um eine Rückkopplung im Spezialfall einer Gegenkopplung. Die Differenz aus dem Sollwert und dem zurückgeführten Istwert ist die sogenannte Regelabweichung welche über den Regler zur Stellgröße wird. Die Stellgröße ist nun die physikalische Größe die die Regelstrecke zum gewünschten Verhalten führt.\n\n\n\n\n\n\n\nAbbildung 1.1: Standardregelkreis\n\n\n\n\n1.2.1 Reglertypen\nEs kann zwischen zwei Arten von Reglern unterschieden werden. Erstere sind einfache Regler die die Stellgröße nur zwischen verschiedenen Zuständen hin und her Schalten können. Zum Beispiel Ein / Aus. Oder die Gänge eines Automatikgetriebes. Diese Regler werden unstetige Regler genannt. Unstetige Regler können gut mittels Hysteresen beschrieben werden.\nDer zweite Typ von Regler kann die Stellgröße kontinurierlich anpassen. Diese Regler werden stetige Regler genannt. Stetige Regler können gut mit mathematische Gleichungen im Laplacebereich beschrieben werden.",
    "crumbs": [
      "Steuer- und Regelungstechnik",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Regelungstechnik</span>"
    ]
  },
  {
    "objectID": "SteuerRegel/01.02_Regelungstechnik.html#unstetige-regler",
    "href": "SteuerRegel/01.02_Regelungstechnik.html#unstetige-regler",
    "title": "1  Regelungstechnik",
    "section": "1.3 Unstetige Regler",
    "text": "1.3 Unstetige Regler\nKlassische unstetige Regler sind Bimetallschalter. Diese werden zum Beipiel bei Heizlüftern eingesetzt.\nIst der Raum, und damit das Bimetall kalt so ist der Kontakt geschlossen und der Lüfter läuft. Wird die Raumluft und damit das Bimetall warm wird der Kontakt geöffnet und der Lüfter hört auf zu heizen.\n\n\n\\(T_{ref}\\) … Referenz Temperatur\n\n\n\\(T_{ein}\\) … Einschaltschwelle\n\n\n\\(T\\) … Temperatur\n\n\n\\(T_{aus}\\) … Ausschaltschwelle\n\n\n\n\n\n\n\n\n\n\nAbbildung 1.2: Zweipunktregler eines einfachen Heizlüfters\n\n\n\n\n\n\n1.3.1 Zweipunktregler\nDer Zweipunktregler kann, wie der Name schon sagt, die Stellgröße zwischen zwei Zuständen schalten. Zum Beipiel die Heizung einschalten wenn die Temperatur zu niedrig ist und wieder Abschalten wenn die Temperatur hoch genug ist. Siehe dazu die Kennlinie Abbildung 1.2. Die Kennlinie stellt eine Hysterese dar. Die Umsetzung ist auch mittels Operationsverstärker möglich.",
    "crumbs": [
      "Steuer- und Regelungstechnik",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Regelungstechnik</span>"
    ]
  },
  {
    "objectID": "SteuerRegel/01.02_Regelungstechnik.html#stetige-regler",
    "href": "SteuerRegel/01.02_Regelungstechnik.html#stetige-regler",
    "title": "1  Regelungstechnik",
    "section": "1.4 Stetige Regler",
    "text": "1.4 Stetige Regler\nFür das Verständnis von stetigen Reglern ist es hilfreich die Regelungstechnik mathematisch zu betrachten, da sich ein Regler sehr gut mit Formeln beschreiben und erklären lässt. In einem eigenen Kapitel soll behandelt werden wie Regler praxisnahe implementiert werden können.\nDer oben gezeigte Regelkreis, Abbildung 1.1, lässt sich mathematisch als Übertragungsfunktion beschreiben. Hier werden ausschließlich SISO (Single Input Single Output) und LTI (Linear Time Invariant) Systeme betrachtet. Das Bedeutet Systeme die einen Eingang und einen Ausgang haben. Jeder Block kann einzeln mit einer Übertragungsfunktion, analog der Vierpoltheorie, beschrieben werden. Wie auch in der Vierpoltheorie kann aber auch eine Verschaltung von Blöcken als Übertragungsfunktion beschrieben werden. Ein Block wird in der Regelungstechnik auch als Strecke bezeichnet.\n\n1.4.1 Die Übertragungsfunktion\n\n1.4.1.1 Motivation\nDie Übertragungsfunktion Beschreibt den Zusammenhang zwischen Ausgang und Eingang.\nIst die Übertragungsfunktion bekannt, so kann die Strecke und deren Verhalten (der Ausgang) auf verschiedene Eingänge berechnet werden. Dies wird auch Simulation genannt. Für Marketingzwecke könnte die Übertragungsfunktion auch als einfache Form eines “digitalen Zwillings” bezeichnet werden. Ist die Übertragungsfunktion mathematisch beschrieben, können Regler entworfen und getestet werden, ohne das tatsächliche physikalische Modell benutzen zu müssen. Dies ist speziell sinnvoll wenn, das physikalische System für Testzwecke nicht zur Verfügung steht bzw. nicht für Testzwecke geeignet ist. Eine Strecke (=physikalisches System) steht z.B. nicht zur Verfügung, wenn:\n\nEs sich geographisch woanders befindet\n\nEs für die Produktion benötigt wird\n\nEs noch nicht gebaut wurde\n\nEine Strecke (=physikalisches System) ist nicht geeignet für Testzwecke wenn z.B.:\n\nDas System sehr langsam ist (Heizung eines Gebäudes)\n\nEin fehlerhafter Regler großen Schaden anrichten kann\n\n\n\n1.4.1.2 Streckenidentifikation\nAls Streckenidentifiaktion wird der Vorgang beschrieben, von einem physikalischem System das mathematische Modell, die Übertragungsfunktion, zu erstellen. Zwei Methoden wie dieses Ziel erreicht werden kann, werden hier beschrieben.\n\nDer mathematische Ansatz, Kapitel 1.4.2\n\nDer messtechnische Ansatz, Kapitel 1.4.3\n\n\n\n\\[\nV = \\frac{A}{E}\n\\tag{1.1}\\]\n\n\n\\(V\\) … Verarbeitung, die Übertragungsfunktion\n\n\n\\(E\\) … Eingang\n\n\n\\(A\\) … Ausgang\n\n\nGängige Bezeichnungen der Übertragungsfunktion der einzelnen Blöcke ist wie folgt.\n\n\n\\(R\\) … Übertragungsfunktion des Reglers\n\n\n\\(M\\) … Übertragungsfunktion des Sensors\n\n\n\\(G\\) … Übertragungsfunktion der zu Regelnden Strecke\n\n\n\n\n\n1.4.2 Mathematische Streckenidentifikation\nAus den physikalischen Zusammenhängen kann die Übertragungsfunktion berechnet werden. Die komplexe Schreibweise ist nur für periodische sinusförmige Signale geeignet. Sollen Signale betrachtet werden die beliebig, stetig, sind ist die komplexe schreibweise nicht ausreichend. Es müssen die physikalischen Gleichungen in differentieller Form angeschrieben werden.\nUm die Mathematik möglichst einfach zu halten wird in der Regelungstechnik im Laplace Bereich gearbeitet. Dadurch ist es nicht notwendig die Diffenrentialgleichung bei physikalischen Systemen, die durch eine Differentialgleichung beschrieben werden, zu lösen.\nEin Besipiel, wie eine mathematische Streckenidentifikation abläuft ist in Abschnitt Kapitel 1.4.4 zu finden.\n\n\n1.4.3 Messtechnische Streckenidentifikation\nManche Systeme sind zu komplex um Sie mathematisch zu beschreiben. Andere Systeme sind mathematisch nicht beschreibbar, weil das Innenleben nicht bekannt ist. In diesen Fällen kann die messtechnische Ermittlung der Übertragungsfunktion herangezogen werden.\nDabei wird am Eingang der Strecke ein Testssignal aufgeschalten und der Ausgang gemessen. Aus diesen Messdaten kann die Übertragungsfunktion, ein mathemtisches Modell, der Strecke erstellt werden.\n\n\n1.4.4 Die Laplace Transformation\noder die Anstrengung der Faulen.\n\n1.4.4.1 Warum Laplace\nUm eine Übertragungsfunktion zu Berechnen muss der Ausgang durch den Eingang dividiert werden. Wird das physikalische System durch eine lineare Gleichung beschrieben ist das sehr Einfach möglich und die Laplace Transformation ist nicht notwendig. Ein Beispiel dafür is das Ohm’sche Gesetz.\n\n\n\\[\nR_{ohm} = \\frac{U}{I}\n\\tag{1.2}\\]\n\n\n\\(U\\) … Spannung am Widerstand als Ausgang\n\n\n\\(R_{ohm}\\) … Ohm’scher Widerstand als Übertragungsfunktion\n\n\n\\(I\\) … Strom am Widerstand als Eingang\n\n\nWird das physikalische System aber durch eine Differentialgleichung beschrieben, wie zum Beispiel bei einem Tiefpass, so wäre es notwendig zuerst die Differentialgleichung zu lösen um die Übertragungsfunktion zu berechnen. Hier bietet die Lapalce Transformation eine erhebliche erleichterung.\nWird die Übertragungsfunktion im Laplace-Bereich angeschrieben, ergeben sich weitere Vorteile, wenn es später darum geht einen Regler zu entwerfen und die Stabilität einer Strecke zu beurteilen.\n\n1.4.4.1.1 Beispiel Übertragungsfunktion eines Tiefapsses\n\n\n\n\n\n\nAbbildung 1.3: Tiefpass\n\n\n\n\n\n\\[\ni_{c}{\\left(t \\right)} = \\frac{\\frac{d}{d t} u_{c}{\\left(t \\right)}}{C}\n\\tag{1.3}\\]\n\n\n\\[\ni_{c}{\\left(t \\right)} = \\frac{- u_{c}{\\left(t \\right)} + u_{in}{\\left(t \\right)}}{R_{ohm}}\n\\tag{1.4}\\]\n\n\nDurch Gleichsetzten von Gleichung 1.3 und Gleichung 1.4 ergibt sich die allgemeine Differenzialgleichung 1. Ordnung für den Tiefpass.\n\n\n\\[\n\\frac{d}{d t} u_{c}{\\left(t \\right)} + \\frac{u_{c}{\\left(t \\right)}}{C R_{ohm}} = \\frac{u_{in}{\\left(t \\right)}}{C R_{ohm}}\n\\tag{1.5}\\]\n\n\n\\(R_{ohm}\\) … Ohmscher Widerstand\n\n\n\\(C\\) … Kapazität\n\n\n\\(t\\) … Zeit\n\n\n\\(i_{c}{\\left(t \\right)}\\) … Strom\n\n\n\\(u_{c}{\\left(t \\right)}\\) … Ausgangsspannung\n\n\n\\(u_{in}{\\left(t \\right)}\\) … Eingangsspannung\n\n\nMüsste nun von dieser Differentialgleichung die Übertragungsfunktion, also \\(G=Ausgang/Eingang\\), angegeben werden, so müsste zunächst die Differentialgleichung gelöst werden.\nDie Laplace Transformation bietet hier einen alternativen Weg der mit weiteren Vorteilen verbunden ist wenn es darum geht Blöcke miteinander zu kombinieren oder Aussagen über das System zu treffen.\n\n\n\n1.4.4.2 Laplacetransformation\nDie tiefere Mathematik der Laplacetransofrmation überlassen wir hier den Mathematiker:innen und den ersten Semstern eines Studiums. Wir wollen die Laplacetransformation lediglich als Werkzeug zur vereinfachung unserer Arbeit verwenden. Dazu benötigen wir folgende Grundregeln.\nVereinfacht ist die Laplacetransformation als eine Übersetzung aus dem Zeitbereich, also mit der varaible \\(t\\), in den Frequenzbereich mit der Variable \\(s\\) zu verstehen. Die Übersetzung erfolgt in vielen Fällen sehr einfach mittels Tabelle. Hier wird die Transformation nur für ausgewählte Signale und mathematische Operationen angeführt.\n\n\n\nTabelle 1.1: Laplacetransformationstabelle\n\n\n\n\n\n\n\n\n\n\nZeitbereich x(t)\nFrequenzbereich X(s)\nBemerkung\n\n\n\n\n\\(\\frac{d \\ x(t)}{d \\ t}\\)\n\\(s \\cdot X(s) - x(0)\\)\nTransformation der Ableitung nach der Zeit, \\(x(0)\\) ist dabei der Wert zum Zeitpunkt Null. Bei einem Kondensator wäre dies zum Beispiel der Ladezustand zu Beginn.\n\n\n\\({ \\int x(t) \\, d \\ t}\\)\n\\(\\frac{1}{s} \\cdot X(s)\\)\nTransformation der Integration über der Zeit\n\n\n\\(\\delta (t)\\)\n\\(1\\)\nTransformation des Impulses\n\n\n\\(\\sigma (t)\\)\n\\(\\frac{1}{s}\\)\nTransformation des Sprunges\n\n\n\\(e^{at}\\)\n\\(\\frac{1}{s -a}\\)\n\n\n\n\\(\\frac{1}{a} e^{\\frac{-t}{a}}\\)\n\\(\\frac{1}{1 + as}\\)\n\n\n\n\n\n\n\nWird nun Gleichung Gleichung 1.5 mittels der Tabelle Tabelle 1.1 transformiert erhalten wir eine Gleichung aus der wir durch einfaches Umformen eine Übertragungsfunktion erhalten. Es wird angenommen, dass $ x(0) = 0 $ ist.\n\n\n\\[\nU_{C} s + \\frac{U_{C}}{C R_{ohm}} = \\frac{U_{IN}}{C R_{ohm}}\n\\tag{1.6}\\]\n\n\n\\[\nG = \\frac{U_{C}}{U_{IN}}\n\\tag{1.7}\\]\n\n\n\\[\nG = \\frac{1}{C R_{ohm} + s}\n\\tag{1.8}\\]\n\n\n\n\n\n1.4.5 Testsignale und Streckenverhalten\n\n1.4.5.1 Testsignale\n\n\n1.4.5.2 Streckenverhalten\n\n1.4.5.2.1 Interaktiver PT2 Simulator\n\nPlot.plot({\n  y: {\n    grid: true,\n  //  domain: [0, 4]\n  },\n  marks: [\n    Plot.line(y, {\n      x: \"t\",\n      y: \"s\",\n      stroke: '#888'\n    }),\n    Plot.line(y, { x: \"t\", y: \"u\", stroke: '#34f' })\n  ]\n})\n\n\n\n\n\n\n\nviewof input = Select(\n  ['step', 'hardstep', 'smoothstep', 'ramp', 'quadratic ramp'],\n  {\n    value: 'step',\n    label: 'Input'\n  }\n)\n\n//viewof Kp = Range([1e-12, 100], {\n//  label: tex`K_P`,\n//  value: 1,\n//  transform: Math.log\n//})\n\n//viewof Ki = Range([1e-12, 10], {\n//  label: tex`K_I`,\n//  value: 0,\n//  transform: Math.log\n//})\n\n//viewof Kd = Range([1e-12, 1], {\n//  label: tex`K_d`,\n//  value: 0,\n//  transform: Math.log\n//})\n\n//viewof dt = Range([1e-4, 0.1], {\n//  value: 0.001,\n//  transform: Math.log,\n//  label: tex`\\Delta t`\n//})\n\nviewof Kpt2 = Range([1e-12, 5], {\n  value: 1,\n  transform: Math.log,\n  label: tex`K_{pt2}`\n})\n\nviewof D = Range([1e-12, 10], {\n  value: 0.5,\n  transform: Math.log,\n  label: tex`D`\n})\n\nviewof T = Range([1e-12, 5], {\n  value: 1,\n  transform: Math.log,\n  label: tex`T`\n})\n\nviewof tMax = Range([1, 10e3], {\n  value: 10,\n  transform: Math.log,\n  label: tex`t_{max}`\n})\n\ny = {\n  const output = [];\n\n  let p; \n  let t0 = -0.5;\n  //let tMax = 20;\n\n  let t = t0;\n  let d = 0;\n  let u = 0;\n  let i = 0;\n  let e = 0;\n  let eprev = e;\n  let pu = u;\n  let ppu = u;\n  let du = 0;\n  let ddu = 0;\n  let pdu = 0;\n  let y = 0;\n  let py = 0;\n  let ppy = 0;\n  let dy = 0;\n  let ddy = 0;\n  let pdy = 0;\n  let de = 0;\n  let dt = 0.001;\n  let s = setPoint(t0);\n  output.push({ t, u, s });\n\n  let j = 1;\n  while (t &lt; tMax) {\n    t = t0 + j * dt;\n\n    s = setPoint(t);\n   \n    e = s - u;\n    de = eprev-e;\n\n    //du = (u-pu)/dt;\n    //ddu = (du - pdu)/dt;\n\n    //dy = (py - y)/dt;\n    //ddy = (dy - pdy)/dt;\n\n    p = e;\n    i += e * dt;\n    d = de/dt;\n\n    y = s; //(Kp * p + Ki * i + Kd * d) * dt;\n    \n    u = (2*D*T*dt*pu + Kpt2*dt**2*y - T**2*ppu + 2*T**2*pu)/(2*D*T*dt + T**2 + dt**2);\n\n    ppu = pu;\n    pu = u;\n    //pdu = du;\n\n    //ppy = py;\n    //py = y;\n    //pdy = dy;\n\n    eprev = e;\n\n    output.push({ t, u, s });\n    j++;\n  }\n\n  return output;\n}\n\nsetPoint = {\n  function hardstep(x) {\n    return Math.max(0, Math.min(1, x));\n  }\n  function smoothstep(x) {\n    var x = hardstep(x);\n    return x * x * (3 - 2 * x);\n  }\n  switch (input) {\n    case 'step':\n      return t =&gt; (t &gt;= 0 ? 1 : 0);\n    case 'ramp':\n      return t =&gt; (t &gt;= 0 ? t : 0);\n    case 'quadratic ramp':\n      return t =&gt; (t &gt;= 0 ? t * t : 0);\n    case 'smoothstep':\n      return smoothstep;\n    case 'hardstep':\n      return hardstep;\n    default:\n      throw new Error('Invalid input');\n  }\n}\n\nimport { Range, Select } from '@observablehq/inputs'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1.4.5.3 Identifikation\n\n\n\n1.4.6 Zusammenschaltung von Blöcken\nWerden Blöcke kombiniert können die resultierenden Übertragungsfunktionen berechnet werden.\nZur vereinfachung kann die Übertragungsfunktion des Sensors mit \\(M=1\\) angenommen werden, \\(M=1\\), wenn dieser im Verhälnis zur Strecke und zum Regler vernachlässigbar ist. Dies ist zum Beispiel der Fall wenn der Sensor viel schneller ist als die Strecke und der Regler. Diese Vorraussetzung ist für viele Systeme gegeben.\nFür den Regelkreis, Abbildung 1.1, ergebn sich folgende Möglichkeiten.\n\n1.4.6.1 Die Führungsübertragungsfunktion\nDie Führungsübertragungsfunktion gibt das Verhältnis zwischen Sollgröße und Istgröße an. Sie Beschreibt damit das Verhalten des Regelkreises mit der Sollgröße als Eingang und der Istgröße als Ausgang. Ist eine Regelstrecke ideal so ist die die Führungsübertragungsfunktion gleich Eins.\n\n\n\\[\nF_{w} = \\frac{G R}{G M R + 1}\n\\tag{1.9}\\]\n\n\n\\(F_{w}\\) … Führungsübertragungsfunktion\n\n\n\n\n1.4.6.2 Die Schleifenübertragungsfunktion\nDie Schleifenübertragungsfunktion ist die Übertragungsfunktion des offenen Regelkreises, also ohne Rückkopplung und ist im Laplace Bereich eine einfache Multiplikation.\n\n\n\\[\nF_{o} = G R\n\\tag{1.10}\\]\n\n\n\\(F_{o}\\) … Schleifenübertragungsfunktion\n\n\n\n\n1.4.6.3 Die Störübertragungsfunktion\nDie Störübertragungsfunktion beschreibt wie sich die Störgröße auf den Ausgang auswirkt.\n\n\n\\[\nF_{s} = \\frac{G}{F_{o} + 1}\n\\tag{1.11}\\]\n\n\n\\(F_{s}\\) … Störübertragungsfunktion\n\n\n\n\n\n1.4.7 Interaktiver PID Simulator\n Eingangssignal \\(w\\) \n Ausgangssignal \\(y\\) \n Regelabweichung \\(e\\) \n Stellgröße \\(u\\) \n\n// The basic code layout was found on source: https://observablehq.com/@mbostock/inputs\n// be aware, the code variables do not yet match the variable names in the document\n\nPlot.plot({\n  y: {\n    grid: true,\n  //  domain: [0, 4]\n  },\n  marks: [\n    Plot.line(y_PID, {\n      x: \"t_PID\",\n      y: \"s_PID\",\n      stroke: '#888'\n    }),\n    Plot.line(y_PID, { x: \"t_PID\", y: \"u_PID\", stroke: '#34f' }), //BLue\n    Plot.line(y_PID, { x: \"t_PID\", y: \"e_PID\", stroke: '#fb2f03' }), //RED\n    Plot.line(y_PID, { x: \"t_PID\", y: \"y_PID\", stroke: '#d7fb03' }),  //Greenisch\n  ]\n})\n\n\n\n\n\n\nReglereinstellungen:\n\nviewof Kp_PID = Range([1e-12, 10e3], {\n  label: tex`K_P`,\n  value: 1,\n  transform: Math.log\n})\n\nviewof Ki_PID = Range([1e-12, 10e2], {\n  label: tex`K_I`,\n  value: 0,\n  transform: Math.log\n})\n\nviewof Kd_PID = Range([1e-12, 10e1], {\n  label: tex`K_d`,\n  value: 0,\n  transform: Math.log\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStreckeneinstellungen:\n\nviewof Kpt2_PID = Range([1e-12, 10e3], {\n  value: 1,\n  transform: Math.log,\n  label: tex`K_{pt2}`\n})\n\nviewof D_PID = Range([1e-12, 10], {\n  value: 1,\n  transform: Math.log,\n  label: tex`D`\n})\n\nviewof T_PID = Range([1e-12, 5], {\n  value: 1,\n  transform: Math.log,\n  label: tex`T`\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuswahl Eingangssignal:\n\nviewof input_PID = Select(\n  ['step', 'hardstep', 'smoothstep', 'ramp', 'quadratic ramp'],\n  {\n    value: 'step',\n    label: 'Input'\n  }\n)\n\n\n\n\n\n\nSimulationseinstellungen:\n\nviewof tMax_PID = Range([1, 10e3], {\n  value: 10,\n  transform: Math.log,\n  label: tex`t_{max}`\n})\n\ny_PID = {\n  const output_PID = [];\n\n  let p_PID; \n  let t0_PID = -0.5;\n  //let tMax_PID = 20;\n\n  let t_PID = t0_PID;\n  let d_PID = 0;\n  let u_PID = 0;\n  let i_PID = 0;\n  let e_PID = 0;\n  let eprev_PID = e_PID;\n  let pu_PID = u_PID;\n  let ppu_PID = u_PID;\n  let du_PID = 0;\n  let ddu_PID = 0;\n  let pdu_PID = 0;\n  let y_PID = 0;\n  let py_PID = 0;\n  let ppy_PID = 0;\n  let dy_PID = 0;\n  let ddy_PID = 0;\n  let pdy_PID = 0;\n  let de_PID = 0;\n  let dt_PID = 0.001;\n  let s_PID = setPoint(t0_PID);\n  output_PID.push({ t_PID, u_PID, s_PID });\n\n  let j_PID = 1;\n  while (t_PID &lt; tMax_PID) {\n    t_PID = t0_PID + j_PID * dt_PID;\n\n    s_PID = setPoint_PID(t_PID);\n   \n    e_PID = s_PID - u_PID;\n    de_PID = eprev_PID-e_PID;\n\n    //du = (u-pu)/dt;\n    //ddu = (du - pdu)/dt;\n\n    //dy = (py - y)/dt;\n    //ddy = (dy - pdy)/dt;\n\n    p_PID = e_PID;\n    i_PID += e_PID * dt_PID;\n    d_PID = de_PID/dt_PID;\n\n    y_PID = (Kp_PID * p_PID + Ki_PID * i_PID + Kd_PID * d_PID);\n    \n    u_PID = (2*D_PID*T_PID*dt_PID*pu_PID + Kpt2_PID*dt_PID**2*y_PID - T_PID**2*ppu_PID + 2*T_PID**2*pu_PID)/(2*D_PID*T_PID*dt_PID + T_PID**2 + dt_PID**2);\n\n    ppu_PID = pu_PID;\n    pu_PID = u_PID;\n    //pdu = du;\n\n    //ppy = py;\n    //py = y;\n    //pdy = dy;\n\n    eprev_PID = e_PID;\n\n    output_PID.push({ t_PID, u_PID, s_PID, e_PID, y_PID });\n    j_PID++;\n  }\n\n  return output_PID;\n}\n\nsetPoint_PID = {\n  function hardstep_PID(x) {\n    return Math.max(0, Math.min(1, x));\n  }\n  function smoothstep_PID(x) {\n    var x = hardstep_PID(x);\n    return x * x * (3 - 2 * x);\n  }\n  switch (input) {\n    case 'step':\n      return t_PID =&gt; (t_PID &gt;= 0 ? 1 : 0);\n    case 'ramp':\n      return t_PID =&gt; (t_PID &gt;= 0 ? t_PID : 0);\n    case 'quadratic ramp':\n      return t_PID =&gt; (t_PID &gt;= 0 ? t_PID * t_PID : 0);\n    case 'smoothstep':\n      return smoothstep_PID;\n    case 'hardstep':\n      return hardstep_PID;\n    default:\n      throw new Error('Invalid input');\n  }\n}",
    "crumbs": [
      "Steuer- und Regelungstechnik",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Regelungstechnik</span>"
    ]
  }
]