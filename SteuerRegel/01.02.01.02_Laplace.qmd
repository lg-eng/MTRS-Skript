### Die Laplace Transformation {#sec-Laplace}
oder die Anstrengung der Faulen.

#### Warum Laplace
Um eine Übertragungsfunktion zu Berechnen muss der Ausgang durch den Eingang dividiert werden. Wird das physikalische System durch eine lineare Gleichung beschrieben ist das sehr Einfach möglich und die Laplace Transformation ist nicht notwendig. Ein Beispiel dafür ist das Ohm'sche Gesetz.

```{python}
#| code-fold: true
U_ohm = MySymbol('U',description = 'Spannung am Widerstand als Ausgang')
R_ohm = MySymbol('R_ohm',description = "Ohm'scher Widerstand als Übertragungsfunktion")
I_ohm = MySymbol('I',description = 'Strom am Widerstand als Eingang')

R_ohm_eq=Eq(R_ohm,U_ohm/I_ohm)

display(Markdown(f'$$\n{latex(R_ohm_eq)}\n$${{#eq-Ohm_eq}}'))

QBookHelpers.print_description(R_ohm_eq.free_symbols)

```

Wird das physikalische System aber durch eine Differentialgleichung beschrieben, wie zum Beispiel bei einem Tiefpass, so wäre es notwendig zuerst die Differentialgleichung zu lösen um die Übertragungsfunktion zu berechnen. Hier bietet die Lapalce Transformation eine erhebliche erleichterung.  
Wird die Übertragungsfunktion im Laplace-Bereich angeschrieben, ergeben sich weitere Vorteile, wenn es später darum geht einen Regler zu entwerfen und die Stabilität einer Strecke zu beurteilen.  

##### Beispiel Übertragungsfunktion eines Tiefapsses

![Tiefpass](images/Tiefpass){#fig-Tiefpass}


```{python}
#| code-fold: true
C_cap = MySymbol('C',description = 'Kapazität')
#ut = MyFunction('u(t)',description = 'Spannung')

t = MySymbol('t',description = 'Zeit')
uct0 = MySymbol('u_{C}(0)',description = 'Spannung am Kondensator zum Zeitpunkz *t* = 0 s')
R_ohm.description = 'Ohmscher Widerstand'
ict = Function('i_c',description = 'Strom')(t)
uint = Function('u_in',description = 'Eingangsspannung')(t)
uct = Function('u_c',description = 'Ausgangsspannung')(t)

ict_eq1=Eq(ict,C_cap*diff(uct,t))

#uct_eq = Eq(integrate(ict_eq.rhs,t)*C_cap,integrate(ict_eq.lhs,t)*C_cap + uct0)

ict_eq2 = Eq(ict,1/R_ohm*(uint-uct))
QBookHelpers.print_equation(ict_eq1,label='eq-ict_eq1')
QBookHelpers.print_equation(ict_eq2,label='eq-ict_eq2')

```
Durch Gleichsetzten von  @eq-ict_eq1 und @eq-ict_eq2 ergibt sich die allgemeine Differenzialgleichung 1. Ordnung für den Tiefpass.


```{python}
#| code-fold: true


#RCTP_eq = Eq(diff(uct,t)+1/(R_ohm*C_cap)*uct,1/(R_ohm*C_cap)*uint)
RCTP_eq = Eq(ict_eq1.rhs,ict_eq2.rhs)

QBookHelpers.print_equation(RCTP_eq,label='eq-RCTP')
QBookHelpers.print_description(RCTP_eq.free_symbols)
QBookHelpers.print_description({ict,uct,uint})

```

Müsste nun von dieser Differentialgleichung die Übertragungsfunktion, also $G=Ausgang/Eingang$, angegeben werden, so müsste zunächst die Differentialgleichung gelöst werden.  
Die Laplace Transformation bietet hier einen alternativen Weg der mit weiteren Vorteilen verbunden ist wenn es darum geht Blöcke miteinander zu kombinieren oder Aussagen über das System zu treffen.

#### Laplacetransformation
Die tiefere Mathematik der Laplacetransofrmation überlassen wir hier den Mathematiker:innen und den ersten Semstern eines Studiums. Wir wollen die Laplacetransformation lediglich als Werkzeug zur vereinfachung unserer Arbeit verwenden. Dazu benötigen wir folgende Grundregeln.  
Vereinfacht ist die Laplacetransformation als eine Übersetzung aus dem Zeitbereich, also mit der varaible $t$, in den Frequenzbereich mit der Variable $s$ zu verstehen. Die Übersetzung erfolgt in vielen Fällen sehr einfach mittels Tabelle. Hier wird die Transformation nur für ausgewählte Signale und mathematische Operationen angeführt.  


| Zeitbereich x(t) | Frequenzbereich X(s) | Bemerkung |
| :---             | :------ |:----------|
| $\frac{d \ x(t)}{d \ t}$ |$s \cdot X(s) - x(0)$ |Transformation der Ableitung nach der Zeit, $x(0)$ ist dabei der Wert zum Zeitpunkt Null. Bei einem Kondensator wäre dies zum Beispiel der Ladezustand zu Beginn.|
| ${ \int x(t) \, d \ t}$  |$\frac{1}{s} \cdot X(s)$  |Transformation der Integration über der Zeit|
| $\delta (t)$ | $1$ | Transformation des Impulses|
| $\sigma (t)$ | $\frac{1}{s}$| Transformation des Sprunges|
| $e^{at}$| $\frac{1}{s -a}$| |
| $\frac{1}{a} e^{\frac{-t}{a}}$| $\frac{1}{1 + as}$| |

:Laplacetransformationstabelle {#tbl-laplace}

Wird nun Gleichung @eq-RCTP mittels der Tabelle @tbl-laplace transformiert erhalten wir eine Gleichung aus der wir durch einfaches Umformen eine Übertragungsfunktion erhalten. Es wird angenommen, dass $ x(0) = 0 $ ist.

```{python}
#| code-fold: true

from sympy.abc import s, p, a

from sympy.physics.control.lti import TransferFunction

UC = MySymbol('U_{C}',description = 'Ausgangsspannng im Laplacebereich')
UIN = MySymbol('U_{IN}',description = 'Eingangsspannung im Laplacebereich')

# RCTPLap_eq = Eq(s*UC+1/(R_ohm*C_cap)*UC,1/(R_ohm*C_cap)*UIN)
RCTPLap_eq = Eq(C_cap*s*UC,1/R_ohm*(UIN-UC))
QBookHelpers.print_equation(RCTPLap_eq)

RCTPLap_eq = Eq(G,UC/UIN)
QBookHelpers.print_equation(RCTPLap_eq)

tf1 = Eq(G,TransferFunction(1, 1 + s*R_ohm*C_cap, s))
QBookHelpers.print_equation(tf1)


```
